// Code generated by gobind. DO NOT EDIT.

// Java class libv2ray.Libv2ray is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/2dust/AndroidLibXrayLite
package libv2ray;

import go.Seq;

public abstract class Libv2ray {
	static {
		Seq.touch(); // for loading the native library
		_init();
	}
	
	private Libv2ray() {} // uninstantiable
	
	// touch is called from other bound packages to initialize this package
	public static void touch() {}
	
	private static native void _init();
	
	private static final class proxyV2RayVPNServiceSupportsSet implements Seq.Proxy, V2RayVPNServiceSupportsSet {
		private final int refnum;
		
		@Override public final int incRefnum() {
		      Seq.incGoRef(refnum, this);
		      return refnum;
		}
		
		proxyV2RayVPNServiceSupportsSet(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
		
		public native long onEmitStatus(long p0, String p1);
		public native long prepare();
		public native boolean protect(long p0);
		public native long setup(String Conf);
		public native long shutdown();
	}
	
	
	/**
	 * CheckVersionX string
	This func will return libv2ray binding version and V2Ray version used.
	 */
	public static native String checkVersionX();
	/**
	 * InitV2Env set v2 asset path
	 */
	public static native void initV2Env(String envPath);
	public static native long measureOutboundDelay(String ConfigureFileContent, String endpoint, long timeout) throws Exception;
	/**
	 * NewV2RayPoint new V2RayPoint
	 */
	public static native V2RayPoint newV2RayPoint(V2RayVPNServiceSupportsSet s, boolean adns);
	/**
	 * Delegate Funcation
	 */
	public static native void testConfig(String ConfigureFileContent) throws Exception;
}
